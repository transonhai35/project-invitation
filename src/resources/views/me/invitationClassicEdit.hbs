<header>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container">
    <a class="navbar-brand" href="/">My Web</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <img src="https://i.pinimg.com/564x/8f/33/30/8f3330d6163782b88b506d396f5d156f.jpg" alt="" class="user-avatar">
              <span id="full-name"></span>
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdown">
              <a class="dropdown-item" id="stored-cards">Thiệp mời của tôi</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="/me/my-home">Tạo một thiệp mời</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" id="logout" href="/">Đăng xuất</a>
          </div>
        </li>
        </ul>
    </div>
  </div>
</nav>
</header>



<div class="mt-4 invitation__container">

            <div class="invitation" style="background-image: url('{{card.image}}');" id="my-card">
                <div class="space"></div>
                <form id="formdata" class="invitation__cards" style="font-family: {{card.fontFamily}};">

                    <div class="form-group">
                        <input type="text" class="form-control invitation__title hidden-border" id="title" name="title" value="Thiệp mời">
                    </div>

                    <div class="form-group">
                        <label for="name">Trân trọng kính mời </label>
                        <textarea type="text" class="form-control hidden-border invitation__name" id="name" name="name" required >{{card.name}}</textarea> 
                    </div>
                    <div class="form-group">
                        <textarea class="form-control invitation__description hidden-border" id="description" name="description">{{card.description}}</textarea>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <label for="time">Thời gian</label>
                            <textarea type="text" class="form-control invitation__time  hidden-border" id="time" name="time">{{card.time}}</textarea>
                        </div>
                        <div class="form-group col-lg-6">
                            <label for="location">Địa điểm</label>
                            <textarea type="text" class="form-control invitation__location hidden-border" id="location" name="location">{{card.location}}</textarea>
                        </div>
                    </div>
                    <p class="invitation__footer">Rất hân hạnh được đón tiếp</p>
                </form>
        </div>
    </div>
</div>




<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
    'use strict';
    let id = window.location.href.split('/').pop().split('?').toString();

        let account = JSON.parse(localStorage.getItem('account'));
     let author = account.id;
  let fullName = document.getElementById('full-name');
  window.onload = function() {
    fullName.innerText = account.fullName;
  }
  let storedCards = document.getElementById('stored-cards');
  storedCards.href = '/me/stored/cards' + '/' + author;

     let logout = document.getElementById('logout');
  logout.onclick = () => {
    localStorage.removeItem('account');
  }

    document.getElementById('dl-pdf').onclick = function()  {
    var element = document.getElementById('my-card');
    var opt = {
      margin: 1,
      filename: 'myfile.pdf',
      image: { type: 'jpeg', quality: 0.98 },
      htmlcanvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
    };

    html2pdf(element, opt);
  };

    window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var form = document.getElementById('formdata');
        // Loop over them and prevent submission

        form.addEventListener('submit', function(event) {
            axios({
                method: 'post',
                url: '/me/myCards/:id',
                data: {
                    params: id,
                    title: document.getElementById('title').value,
                    name: document.getElementById('name').value,
                    description: document.getElementById('description').value,
                    time: document.getElementById('time').value,
                    location: document.getElementById('location').value,
                }
            }).then(res => {
                window.location.href = "/me/stored/cards";
            }).catch(err => {
                alert(err.response.data.msg);
            });
        }, false);
  }, false);
})();
</script>
